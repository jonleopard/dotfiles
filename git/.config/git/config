[alias]
	c = commit -am
	fpush = push --force
	s = status
	sclone = clone --depth=1
	amend = commit --amend --all
	undocommit = reset HEAD~
	hreset = reset --hard
	co = checkout
	df = diff --color --color-words --abbrev
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --
	cherrypick = cherry-pick
	cherry = cherry-pick
	cp = cherry-pick
	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"
	reup = rebase-update # depot_tools specific
	git = !exec gie
    # Allows you to easily pick what to rebase
    frbi = "!f() { git rebase -i $(git log --pretty=oneline --color=always | fzf --ansi | cut -d ' ' -f1)^ ; }; f"
	sw = !git checkout $(git branch -a --format '%(refname:short)' | sed 's~origin/~~' | sort | uniq | fzf)

[core]
	precomposeUnicode = true
	autocrlf = false
	pager = delta

[interactive]
	diffFilter = delta --color-only

[delta]
    syntax-theme = 'ansi'
    navigate = true
    line-numbers = true
	features = side-by-side line-numbers decorations
	whitespace-error-style = 22 reverse
	syntax-theme = base16-256

# git mergetool
[merge]
    tool = fugitive
    conflictstyle = diff3
	renameLimit = 0

# correct typos
[help]
	autocorrect = 1

[fetch]
	prune = true

[pull]
	rebase = false

# push easily. http://stackoverflow.com/a/23918418/89484
[push]
	default = current
	followTags = true

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[diff]
	compactionHeuristic = true
	# Show blocks of moved text of at least 20 alphanumeric characters differently than adds/deletes
	# https://blog.github.com/2018-04-05-git-217-released/
	colorMoved = default

[stash]
	showPatch = true

[log]
	date = relative

[sendemail]
	verify = off
	annotate = yes

[commit]
	gpgsign = true
	# https://help.github.com/articles/about-gpg/
	# https://git-scm.com/docs/git-config#git-config-commitgpgSign
	# https://help.github.com/articles/signing-commits-using-gpg/
	# https://github.com/pstadler/keybase-gpg-github

[include]
  path = ~/.config/git/.gitconfig_local
	# private credential file for username, email, and signingkey
	# example:
	# [user]
	# name =
	# email =
	# signingkey =

[init]
	defaultBranch = main
