unbind C-b
set-option -g prefix C-a

# enable mouse use
set-option -g mouse on

# vi for command status
set -g status-keys vi

# vi for copy mode
setw -g mode-keys vi

# form vim/tmux d/y buffer sync
set -g focus-events

# reload ~/.tmux.conf using PREFIX r
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded!"

# Default terminal is 256 colors
set-option -g default-terminal "screen-256color"

# Add truecolor support
set -ga terminal-overrides ",xterm-256color*:Tc"

# Prefix Hightlight
set-option -g status-right '#{prefix_highlight}'

# Index starts from 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Pane title/position
set-option -g pane-border-status bottom
set-option -g pane-border-format "#{pane_index} #{pane_current_command}"

set-option -g status-justify left

# Renumber windows when a window is closed
set-option -g renumber-windows on

# # Pane splits
# bind-key "|" split-window -h -c "#{pane_current_path}"
# bind-key "\\" split-window -fh -c "#{pane_current_path}"
# bind-key "-" split-window -v -c "#{pane_current_path}"
# bind-key "_" split-window -fv -c "#{pane_current_path}"
# bind-key "%" split-window -h -c "#{pane_current_path}"
# bind-key '"' split-window -v -c "#{pane_current_path}"

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------

# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# select-pane
bind-key 0 run "tmux split-window -l 12 'bash -ci ftpane'"

# -------------------------------------------------------------------
# tmux pane + vim 
# -------------------------------------------------------------------

# navigate
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'


# resize
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 10'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 10'

bind-key -T copy-mode-vi M-h resize-pane -L 10
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 10


# -------------------------------------------------------------------
# TPM (Tmux Plugin Manager)
# -------------------------------------------------------------------


# First, install TPM if not present on system
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'mshkrebtan/base16-tmux'


set-option -g @tpm-clean 'P' # key binding to clean TPM plugins
run '~/.tmux/plugins/tpm/tpm'
